#!/bin/bash

##	This script will chuck the finished zst packages into the side repo and then clean up the site and upload the PKGBUILD version.

## Functions
source ctos-functions

## Recycle
lineBreak="<~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>"
myLocalRepo="pkgBld/ctos-side-repo"
myArch="x86_64/"
thRepo="$HOME/$myLocalRepo/$myArch"

clear
cd "$PWD"
currentDir=${PWD##*/}

echo "Building package and pushing"
echo "it to the side repo for compiling and uploading."
if !( makepkg -csrf --sign ); then
    echo "This is not a PKGBUILD"
    not_my_dir
    something_wrong
else
    echo "The next bit happens here"
    echo "after the package has been signed for."
    echo $lineBreak
    to_continue
    clear
    echo $lineBreak
    echo "Looking for local repo."
    if !( test_location "$thRepo" ); then
        echo "can't find the repo location at: $thRepo"
        something_wrong
    else
        echo "Found the repo location."
        echo $lineBreak
        to_continue
        clear
        echo $lineBreak
        echo "Copying the ZST and SIG files to the repo."
        if !( cp -vir *.zst* $thRepo ); then
            something_wrong
        else
            echo "Files copied"
            echo $lineBreak
            echo "What are we missing?"
            echo $lineBreak
            echo "Time to start deleting the old files and cleaning up the build folder."
            echo $lineBreak
            to_continue
            clear
            echo $lineBreak
            echo "Check for duplicates in the x86_64 folder and remove the oldest ones leaving the newest zst and the sig files."
            to_continue
            toDelete=()
            if !( find_old_pkgs toDelete $thRepo $currentDir "zst" ); then
                something_wrong
            else
                ##  Pull temp file and append to array.
                echo $lineBreak
                ##  read from text file
                readarray -t toDelete /tmp/FOP/old-files.txt
                ##  Display text file
                echo "Total files in Build: ${#toDelete[@]}"
                for i in "${toDelete[@]}"; do
                    echo "File $i: {toDelete[$i]}"
                done
                echo
                echo "These are the .zst files in the repo."
                echo "Check that there is no issue with the new files being displayed."
                echo "Did it work."
                echo $lineBreak
                clear
                to_continue
                echo $lineBreak
                echo "Do you want to read the sig files?"
                echo $lineBreak
                to_continue
                echo $lineBreak
                if !( find_old_pkgs toDelete $thRepo $currentDir "sig" ); then
                    something_wrong
                else
                    echo "These are the .sig files in the repo."
                    echo $lineBreak
                    echo "Make sure it displays the newest file"
                    echo "and the oldest files."
                fi
            fi
        fi
        exit 0
    fi
fi
