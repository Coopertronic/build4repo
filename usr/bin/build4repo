#!/bin/bash

##	This script will chuck the finished zst packages into the side repo and then clean up the site and upload the PKGBUILD version.

## Functions
source ctos-functions

## Recycle
myLocalRepo="pkgBld/ctos-side-repo"
myArch="x86_64/"
thRepo="$HOME/$myLocalRepo/$myArch"

clear
cd "$PWD"
currentDir=${PWD##*/}
thBuildAssets=".pkgbuild"
pushRepo=0
noConfirm=''

##  New section that accepts args -y and -n for yes and no
#while getopts ":yn:c:" option; do
while [[ $# -gt 0 ]]; do
    case "$1" in
    --rebuild-db|-y)
        pushRepo=2
        ;;

    --no-rebuild|-n)
        pushRepo=1
        ;;
    --noconfirm|-c)
        noConfirm='--noconfirm'
        ;;
    ?)
        echo "Invalid option: $1."
        exit 1
        ;;
    esac
done

##  Check push to repo flag 0 is default (ask) 1 is no and 2 is yes
#pushRepo=0
#if [ -z "$1" ]; then
#    pushRepo=0
#else
#    pushRepo=$1
#fi

echo "Building package and pushing"
echo "it to the side repo for compiling and uploading."

##  Check for assets
if !( test_location "$thBuildAssets" ); then
    line_break
    echo "No assets folder found at:"
    echo "$thBuildAssets"
    echo "If the build fails then it"
    echo "probably needs some assets."
    line_break
    auto_continue $noConfirm
else
    line_break
    echo "Copying assets to main build folder."
    if !(cp -vir $thBuildAssets/* ./); then
        line_break
        echo "Copying of assets has FAILED!!"
        something_wrong
    else
        line_break
        echo "Assets copied to main build folder."
        echo "The folder now looks like this:"
        echo "$(ls)"
        line_break
        echo "Do you want to build the package?"
        auto_continue $noConfirm
        if !(mv -v .pkgbuild/ ../); then
            echo "could not move assets folder."
            something_wrong
        else
            clear
            line_break '#'
            echo "Lets start the build."
        fi
    fi
fi

if !( makepkg -csrf --sign $noConfirm ); then
    echo "This is not a PKGBUILD"
    not_my_dir
    something_wrong
else
    echo "New package built for $currentDir."
    echo "Do you want to copy it to the repo?"
    line_break
    clear
    line_break
    echo "Looking for local repo."
    if !( test_location "$thRepo" ); then
        echo "can't find the repo location at: $thRepo"
        something_wrong
    else
        echo "Found the repo location."
        line_break
        echo "Copying the ZST and SIG files to the repo."
        if !( cp -vir *.zst* $thRepo ); then
            something_wrong
        else
            echo "Files copied"
            line_break
            echo "Time to start deleting the"
            echo "old files and cleaning up"
            echo "the build folder."
            echo "Are you ready?"
            line_break
            #auto_continue $noConfirm
            clear
            echo "Let's Check for duplicates in the"
            echo "x86_64 folder and remove the"
            echo "oldest ones leaving the newest"
            echo "zst and the sig files."
            if !( find_old_pkgs $thRepo $currentDir "zst" ); then
                something_wrong
            else
                clear
                line_break
                echo "Checking for sig files."
                if !( find_old_pkgs $thRepo $currentDir "sig" ); then
                    something_wrong
                else
                    line_break
                    echo "ZST and SIG files deleted from the"
                    echo "the repo directory."
                    line_break
                    #auto_continue $noConfirm
                    clear
                    line_break '#'
                    echo "Clearing the files from the build folder."
                    line_break
                    find . ! -name 'PKGBUILD' -type f -exec rm -vf {} +
                    line_break '^'
                    echo "Are these the correct files?"
                    #auto_continue $noConfirm
                    clear
                    line_break '#'
                    echo "Clearing the folders from the build folder."
                    line_break
                    echo "You may need your password here."
                    sudo find . ! -name 'PKGBUILD' -type d -exec rm -vrf {} +
                    line_break '^'
                    if !(mv -v ../.pkgbuild/ ./); then
                        line_break '#' 34
                        echo "Could not move the assets folder back."
                        line_break '#' 34
                    fi
                    echo "Build folder cleared. Is this correct?"
                    #auto_continue $noConfirm
                    clear
                    line_break '#'
                    echo "Checking the build folder."
                    line_break
                    echo "$(ls -a)"
                    line_break
                    echo "Are the correct files and folders correct?"
                    #auto_continue $noConfirm
                    cd ..
                    update-git
                    repoReady=$'The ctos-side-repo is updated\nand ready to serve\nthe updated packages.'
                    echo "Finished building $currentDir package."
                    ##  If it's not 0 (ask) and not 1 (no) then it must be 2 (yes)
                    if [ $pushRepo != 0 ]; then
                        if [ $pushRepo != 1 ]; then
                            cd $HOME/$myLocalRepo
                            bash update-repo.sh
                            echo "$repoReady"
                        fi
                    else
                        echo "Do you want to push to the side repo?"
                        to_continue $noConfirm
                        cd $HOME/$myLocalRepo
                        bash update-repo.sh
                        echo "$repoReady"
                    fi
                fi
            fi
        fi
    fi
fi
exit 0
